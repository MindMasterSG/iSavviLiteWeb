@model SMS.Models.VisitorsViewModel
@{
    ViewBag.Title = "EditVisitor";
    Layout = "~/Views/Shared/_LayoutTransactions.cshtml";
}
<script language="javascript" type="text/javascript">
    function pageValidation() {
        if (document.getElementById("FirstName").value == "") {
            alert('Please enter the First Name');
            document.getElementById("FirstName").focus();
            return false;
        }
        return true;
    }
</script>
<h2>
    Edit Visitor</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    <fieldset>
        @*<legend>Create User</legend>*@
        <div class="check_main_bg_cont">
        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "bigtextfield" })
            @Html.ValidationMessageFor(model => model.FirstName)
            @Html.HiddenFor(model => model.VisitorId)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.MiddleName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.MiddleName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.LastName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CompanyName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ContactNumber)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ContactNumber)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Address)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.NRIC)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.NRIC)
        </div>
        @if (Session["DeploymentId"] == null)
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.Deployements)
            </div>
            <div class="editor-field">
                @Html.DropDownList("Deployements", Model.Deployements.Select(c => new SelectListItem { Text = c.DeploymentName, Value = c.DeploymentId.ToString(), Selected = c.DeploymentId == Model.DeploymentId }))
                @*@Html.DropDownListFor(model => Model.Deployements, new SelectList(Model.Deployements, "DeploymentId", "DeploymentName", Model.DeploymentId), "Select User Type")*@
            </div>
        }
        </div>
        <p>
            <input type="submit" class="btnAddUpdate" value="Update" onclick="return pageValidation();" 
            <a href="/SMSAdmin/GetVisitorsList"><input type="button"  class="btnCancel" value="Cancel" /></a>
        </p>
    </fieldset>
}