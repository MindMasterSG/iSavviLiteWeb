@model SMSEntities.SMSDBEntities.VisitorCheckInOut
@{
    ViewBag.Title = "AddVisitorCheckInOut";
    Layout = "~/Views/Shared/_LayoutTransactions.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.webcam.js")" type="text/javascript"></script>
<h2>
    Add Visitor Check-In / Check-Out
</h2>
<script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
@*<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>*@
<link rel="stylesheet" href="@Url.Content("~/Content/css/jquery-ui.css")" />
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.9.1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-ui.js")"></script>
<h4>@Html.Raw(ViewBag.ErrorMessage)</h4>
<script language="javascript" type="text/javascript">
    function pageValidation() {
        if ($("#address").val() == "" || $("#name").val() == "" || $("#nric").val() == "") {
            alert('Please enter the mandatory fields.');
            return false;
        }
        if ($("#BlockType").val() == "Temporary") {
            alert('Please enter the Block Day(s).');
            return false;
        }
        return true;
    }

    function frmSubmit() {
        document.forms[0].submit();
    }
    $(function () {
        $("#BlockedDate").datepicker();
        $("#UnblockedDate").datepicker();
    });
</script>
<script src="@Url.Content("~/Scripts/jquery.webcam.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "Please correct the below errors.")
    <fieldset>
        @ViewBag.ErrorMessage
        <div class="check_main_bg_cont">
            <div class="check_left_cont_txt">
                <table>

                    <tr>
                        <td class="tdleftcol">
                            NRIC / ID *
                        </td>
                        <td class="tdrightcol" colspan="3">
                            @Html.TextBoxFor(model => model.nricid, new { @id = "nric", @class = "bigtextfield", maxlength = 9 })
                            <input type="submit" class="btnScan" value="scan" name="button" style="margin-top:8px;visibility:hidden;" />
                        </td>
                    </tr>
                    <tr>
                        <td class="tdleftcol">
                            Name *
                        </td>
                        <td class="tdrightcol" colspan="3">
                            @Html.TextBoxFor(model => model.name, new { @id = "name", @class = "bigtextfield" })
                        </td>
                    </tr>
                    @*<tr>
                            <td class="tdleftcol">
                                Tel. No.
                            </td>
                            <td class="tdrightcol" colspan="3">
                                @Html.TextBoxFor(model => model.telno, new { @class = "bigtextfield" })
                            </td>
                        </tr>*@
                    <tr>
                        <td class="tdleftcol">
                            Address *
                        </td>
                        <td class="tdrightcol" colspan="3">
                            @Html.TextBoxFor(model => model.address, new { @id = "address", @class = "bigtextfield" })
                        </td>
                    </tr>
                    <tr>
                        <td class="tdleftcol">
                            Block Guest?
                        </td>
                        <td class="tdrightcol">
                            <table width="100%">
                                <tr>
                                    <td>
                                        <select id="IsBlockGuest" name="IsBlockGuest" class="ddl">
                                            <option value="0">No</option>
                                            <option value="1">Yes</option>
                                        </select>
                                        @*@Html.DropDownList("ddlPurposeList", Model.PurposeList.Select(c => new SelectListItem { Text = c.purpose, Value = c.purpose.ToString() }), "Select", new { @class = "ddl" })*@
                                        @*<input type="text" readonly="readonly" id="txtPhone" style="width:80px;" />*@
                                        @*@Html.TextBoxFor(model => model.txtPhone, new { @readonly = "readonly", @style = "width:80px;" })*@
                                        @*@Html.TextBoxFor(model => model.txtPhone, new { @style = "width:80px;" })*@
                                    </td>
                                    <td class="tdleftcol">
                                        Block Type
                                    </td>
                                    <td class="tdleftcol">
                                        <select id="BlockType" name="BlockType" class="ddl">
                                            <option value="">Select</option>
                                            <option value="Permanent">Permanent </option>
                                            <option value="Temporary">Temporary </option>
                                        </select>
                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                    <tr>
                        <td class="tdleftcol">
                            Date of Block
                        </td>
                        <td class="tdrightcol">
                            <table width="100%">
                                <tr>
                                    <td class="passcol">
                                        <input type="text" id="BlockedDate" name="BlockedDate" />
                                    </td>
                                    <td class="tdleftcol">
                                        Date of Unblock 
                                    </td>
                                    <td class="tdleftcol">
                                        <input type="text" id="UnblockedDate" name="UnblockedDate" />

                                    </td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                    @*<tr>
                            <td class="tdleftcol">
                                Vehicle (Plate #)
                            </td>
                            <td class="tdrightcol">
                                <table width="100%">
                                    <tr align="left">
                                        <td>@Html.TextBoxFor(model => model.vehicleplatenumber, new { @class = "gen" })
                                        </td>
                                        <td class="tdleftcol">Guard Name
                                        </td>
                                        <td class="tdleftcol">@Html.TextBoxFor(model => model.guardname, new { @class = "gen" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>*@
                    <tr>
                        <td class="tdleftcol">
                            Block Day(s)
                        </td>
                        <td class="tdrightcol" colspan="3">
                            <input type="text" class="bt" id="BlockDays" name="BlockDays" />
                        </td>
                    </tr>
                    <tr>
                        <td class="tdleftcol">
                            BlockRemarks
                        </td>
                        <td class="tdrightcol" colspan="3">
                            <textarea id="BlockRemarks" name="BlockRemarks"></textarea>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="check_right_cont_txt">
                <div id="webcam">
                </div>
                <a href="#" id="upload" style="color: Orange;">Capture image and upload</a>
                @*<input type="submit" class="btnAddUpdate" value="Check In/Out" onclick="return pageValidation();" />*@
                <button class="btnAddUpdate" name="button" value="Check In/Out" onclick="return pageValidation();">Check In/Out</button>
            </div>
        </div>

    </fieldset>
}
<script type="text/javascript">
    var pos = 0, ctx = null, saveCB, image = [];
    var canvas = document.createElement('canvas');
    canvas.setAttribute('width', 320);
    canvas.setAttribute('height', 240);
    ctx = canvas.getContext('2d');
    image = ctx.getImageData(0, 0, 320, 240);

    var saveCB = function (data) {
        var col = data.split(';');
        var img = image;
        for (var i = 0; i < 320; i++) {
            var tmp = parseInt(col[i]);
            img.data[pos + 0] = (tmp >> 16) & 0xff;
            img.data[pos + 1] = (tmp >> 8) & 0xff;
            img.data[pos + 2] = tmp & 0xff;
            img.data[pos + 3] = 0xff;
            pos += 4;
        }

        if (pos >= 4 * 320 * 240) {
            ctx.putImageData(img, 0, 0);
            $.post('@Url.Action("Upload")', { type: 'data', image: canvas.toDataURL("image/png") }, function (result) {
                if (result.success) {
                    alert('Image saved. Please enter all the other details and submit.');
                }
            });
            pos = 0;
        }
    };

    $('#webcam').webcam({
        width: 320,
        height: 240,
        mode: 'callback',
        swffile: '@Url.Content("~/scripts/jscam.swf")',
        onSave: saveCB,
        onCapture: function () {
            webcam.save();
        }
    });

    $('#upload').click(function () {
        webcam.capture();
        return false;
    });
</script>
